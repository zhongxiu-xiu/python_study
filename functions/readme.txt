1、为什么要有函数？
     业务代码的复用
  
2、函数定义
def 函数名([参数]):
	业务代码
	[return ..]
	
3、调用
	直接写函数名即可,如果跨包或跨文件，只需要引入即可(ctrl+shift+o)
	
4、参数
	1、你首先要明确，为什么要用参数，不用不行吗？
		我先写的是无参的函数，业务直接被包裹
		但是，我觉得业务中有有的东西有点“死”，我想写灵活一点
	2、默认值
		参数可以不填，不填时走默认值
		带默认值的参数放最后	
	3、变参 * ** (有一定难度) 
		定义时， * 将参数配成元组；调用时，*将元组或列表打散成参数进行参数传递
		定义时，**将参数装配成字典；调用时，**将字典打散成参数进行参数传递
		变参的魅力在于对于不确定的参数采用变参处理，这样可以最大限度的释放参数的压力
			有了变参，需求变更后，不动参数，只需要改业务代码即可
		
4、返回值
	1、为什么要用return，不用不行吗？？
		我的方法仅仅提供业务数据，另外任何人拿到可以做任何事
	2、带return的函数在调用时一定要用一个参数去接收（******）	
		
		
5、老蔡经验(请你当宝典用)
调的习惯：
	当我打开一个函数，首先看是否有return，如果有，想都不要想，立刻用一个变量去接收整个函数
	然后才去看是否有参数（变参，定餐），依次传入对应的参数即可
	
写的习惯：
	1、首先一上来什么都别管，先把业务给我实现了。（无参无返回）
	2、审视一下自己写的业务有没有可以把写死的东西当参数传的可能（让你的代码灵活一点），于是
	     把业务代码中死的部分全部当参数传
	3、再审视一下，看看这个方法是提供给别人用还是我处理就行，如果是提供出去的，就写return
	     并把要返回的数据写在return之后即可